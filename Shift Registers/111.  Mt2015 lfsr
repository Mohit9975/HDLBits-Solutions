module top_module (
	input [2:0] SW,      // R
	input [1:0] KEY,     // L and clk
	output [2:0] LEDR);  // Q

    wire [0:2] w;
    wire [2:0] t;
    wire [2:0] r;
    wire x;
    
    d_ff inst1 (.clk(KEY[0]), .D(t[2]), .Q(w[2]));
    d_ff inst2 (.clk(KEY[0]), .D(t[1]), .Q(w[1]));
    d_ff inst3 (.clk(KEY[0]), .D(t[0]), .Q(w[0]));

    mux2to1 inst4 (.sel(KEY[1]), .in1(r[0]), .in0(w[0]), .O(t[2]));
    mux2to1 inst5 (.sel(KEY[1]), .in1(r[1]), .in0(w[2]), .O(t[1]));
    mux2to1 inst6 (.sel(KEY[1]), .in1(r[2]), .in0(x), .O(t[0]));
    
    assign x= w[1]^w[0];
    assign r= SW;
    assign LEDR= w;
    
    
endmodule

module d_ff(
    input D,
    input clk,
    output Q);
    
    always @(posedge clk)
        begin
            Q<= D;
        end
endmodule

module mux2to1 (
    input in0,
    input in1,
    input sel,
    output O);
    
    always @(*)
        begin
            case(sel)
                1'b0: O<= in0;
                1'b1: O<= in1;
            endcase
        end
endmodule
